name: Build and release

on:
   push:
     branches:
         - main
   workflow_dispatch:

jobs:
  check-action-changes:
    runs-on: ubuntu-latest
    outputs:
      filter: ${{ steps.filter.outputs.workflows }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            workflows:
              - 'src/**'

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin]
        goarch: [amd64, arm64]
        include:
          - goos: windows
            goarch: amd64
            ext: .exe
          - goos: windows
            goarch: arm64
            ext: .exe
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: Download mods
        run: go mod download
      - name: Build
        run: GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o ./artifacts/semver-tag-release-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.ext }} ./cmd/main.go
      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v3
        with:
          name: semver-tag-release-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.ext }}
          path: ./artifacts/semver-tag-release-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.ext }}
          retention-days: 5

  build-action:
    runs-on: ubuntu-latest
    needs: check-action-changes
    if: ${{ (needs.check-action-changes.outputs.filter == 'true') }}
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: "npm"
          cache-dependency-path: src/package-lock.json
      - name: Install dependencies
        run: npm ci
        working-directory: ./src
      - name: Build
        run: npm run build
        working-directory: ./src
      - name: Commit
        continue-on-error: true
        run: |-
          git config --global user.name "actions"
          git config user.email 'actions@1node.xyz'
          git add action/
          git commit -m "Added action" 
          git push

  release:
    runs-on: ubuntu-latest
    needs: [build, build-action]
    if: always() && (needs.build-action.result == 'success' || needs.build-action.result == 'skipped')
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
      - run: chmod +x semver-tag-release-linux-amd64/semver-tag-release-linux-amd64
      - run: ./semver-tag-release-linux-amd64/semver-tag-release-linux-amd64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CREATE_RELEASE: true
          ASSETS: |
            semver-tag-release-linux-amd64/semver-tag-release-linux-amd64
            semver-tag-release-linux-arm64/semver-tag-release-linux-arm64
            semver-tag-release-darwin-amd64/semver-tag-release-darwin-amd64
            semver-tag-release-darwin-arm64/semver-tag-release-darwin-arm64
            semver-tag-release-windows-amd64.exe/semver-tag-release-windows-amd64.exe
            semver-tag-release-windows-arm64.exe/semver-tag-release-windows-arm64.exe
